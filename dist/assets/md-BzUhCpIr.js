import{_ as o}from"./slidev/VClicks-CIWyvwyn.js";import{b as u,o as c,w as s,e as i,g as e,v as p,x as m,S as r}from"./modules/vue-DzJFbhsd.js";import{I as _}from"./slidev/default-Dl7bnO08.js";import{u as d,f}from"./slidev/context-vZNp1LYS.js";import{_ as h}from"./index-BWYy1uCi.js";import"./modules/shiki-Ia0xjPbq.js";const y={__name:"slides.md__slidev_53",setup(k){const{$clicksContext:t,$frontmatter:n}=d();return t.setup(),(P,l)=>{const a=o;return c(),u(_,p(m(r(f)(r(n),52))),{default:s(()=>[i(a,{animate:""},{default:s(()=>l[0]||(l[0]=[e("h2",null,"Best Practices",-1),e("h3",null,"Always Use try/catch",-1),e("ul",null,[e("li",null,"Ensures errors are caught and handled gracefully."),e("li",null,"Prevents unhandled Promise rejections.")],-1),e("h3",null,"Check response.ok in fetch",-1),e("ul",null,[e("li",null,"fetch only rejects on network failures, not HTTP errors (404, 500)."),e("li",null,"Manually check response.ok or response.status.")],-1),e("h3",null,"Use async/await with Promise.all for Parallel Requests",-1),e("ul",null,[e("li",null,"Improves performance by running multiple requests simultaneously.")],-1),e("h3",null,"Summary",-1),e("ul",null,[e("li",null,[e("p",null,"async/await + try/catch → Best for clean, readable async code.")]),e("li",null,[e("p",null,"Always check response.ok in fetch → HTTP errors don’t auto-reject.")]),e("li",null,[e("p",null,"Use Promise.all for parallel requests → Faster than sequential calls.")])],-1)])),_:1})]),_:1},16)}}},j=h(y,[["__scopeId","data-v-3fc1119e"]]);export{j as default};
